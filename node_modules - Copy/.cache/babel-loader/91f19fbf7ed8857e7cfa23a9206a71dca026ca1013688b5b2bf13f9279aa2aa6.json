{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Documents\\\\React Projects\\\\news\\\\src\\\\Component\\\\News.js\";\nimport React, { Component } from \"react\";\nimport NewsItem from \"./NewsItem\";\nimport Spinner from \"./Spinner\";\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class News extends Component {\n  constructor() {\n    super();\n    this.fetchArticles = async () => {\n      try {\n        let apiUrl = `https://newsapi.org/v2/top-headlines?country=in&category=${this.props.category}&apiKey=bd206d501f8846c4882cdc38da60ea82&page=${this.state.page}&pageSize=${this.state.pageSize}`;\n        let response = await fetch(apiUrl);\n        let parsedData = await response.json();\n        console.log(parsedData);\n\n        // Check if parsedData has articles and update state accordingly\n        if (parsedData.articles) {\n          this.setState({\n            articles: parsedData.articles,\n            loading: false,\n            totalResults: parsedData.totalResults // Set totalResults from API response\n          });\n        } else {\n          this.setState({\n            loading: false\n          });\n        }\n      } catch (error) {\n        console.log(\"Error fetching data: \", error);\n        this.setState({\n          loading: false\n        });\n      }\n    };\n    this.handlePrev = async () => {\n      this.setState(state => ({\n        page: state.page - 1\n      }), this.fetchArticles, window.scrollTo(0, 0));\n    };\n    this.handleNext = async () => {\n      this.setState(state => ({\n        page: state.page + 1\n      }), this.fetchArticles, window.scrollTo(0, 0));\n    };\n    this.state = {\n      articles: [],\n      loading: true,\n      page: 1,\n      pageSize: 6,\n      // Page size set to 6\n      totalResults: 0\n    };\n  }\n  async componentDidMount() {\n    this.fetchArticles();\n  }\n  render() {\n    const {\n      articles,\n      loading,\n      page,\n      pageSize,\n      totalResults\n    } = this.state;\n    const totalPages = Math.ceil(totalResults / pageSize); // Calculate total pages using pageSize\n\n    // Show loading indicator or message while fetching data\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container my-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Newsify - Top headlines\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this);\n    }\n\n    // Once data is fetched, render the articles\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center\",\n        children: \"Newsify - Top headlines\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: articles.map((elem, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4 my-3\",\n          children: /*#__PURE__*/_jsxDEV(NewsItem, {\n            title: elem.title ? elem.title.slice(0, 60) : \"No title available\",\n            publishedAt: elem.publishedAt.slice(0, 10),\n            description: elem.description ? elem.description.slice(0, 80) : \"No description available\",\n            imageUrl: elem.urlToImage ? elem.urlToImage : \"\",\n            newsUrl: elem.url ? elem.url : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container d-flex justify-content-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: page <= 1,\n          className: \"btn btn-dark\",\n          onClick: this.handlePrev,\n          children: \"\\xAB Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: page >= totalPages,\n          className: \"btn btn-dark\",\n          onClick: this.handleNext,\n          children: \"Next \\xBB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  }\n}\n// Define PropTypes\nNews.propTypes = {\n  category: PropTypes.string.isRequired\n};","map":{"version":3,"names":["React","Component","NewsItem","Spinner","PropTypes","jsxDEV","_jsxDEV","News","constructor","fetchArticles","apiUrl","props","category","state","page","pageSize","response","fetch","parsedData","json","console","log","articles","setState","loading","totalResults","error","handlePrev","window","scrollTo","handleNext","componentDidMount","render","totalPages","Math","ceil","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","elem","index","title","slice","publishedAt","description","imageUrl","urlToImage","newsUrl","url","type","disabled","onClick","propTypes","string","isRequired"],"sources":["C:/Users/Acer/Documents/React Projects/news/src/Component/News.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport NewsItem from \"./NewsItem\";\r\nimport Spinner from \"./Spinner\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class News extends Component {\r\n  // Define PropTypes\r\n  static propTypes = {\r\n    category: PropTypes.string.isRequired,\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      articles: [],\r\n      loading: true,\r\n      page: 1,\r\n      pageSize: 6, // Page size set to 6\r\n      totalResults: 0,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.fetchArticles();\r\n  }\r\n\r\n  fetchArticles = async () => {\r\n    try {\r\n      let apiUrl = `https://newsapi.org/v2/top-headlines?country=in&category=${this.props.category}&apiKey=bd206d501f8846c4882cdc38da60ea82&page=${this.state.page}&pageSize=${this.state.pageSize}`;\r\n      let response = await fetch(apiUrl);\r\n      let parsedData = await response.json();\r\n      console.log(parsedData);\r\n\r\n      // Check if parsedData has articles and update state accordingly\r\n      if (parsedData.articles) {\r\n        this.setState({\r\n          articles: parsedData.articles,\r\n          loading: false,\r\n          totalResults: parsedData.totalResults, // Set totalResults from API response\r\n        });\r\n      } else {\r\n        this.setState({ loading: false });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error fetching data: \", error);\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  handlePrev = async () => {\r\n    this.setState(\r\n      (state) => ({ page: state.page - 1 }),\r\n      this.fetchArticles,\r\n      window.scrollTo(0, 0)\r\n    );\r\n  };\r\n\r\n  handleNext = async () => {\r\n    this.setState(\r\n      (state) => ({ page: state.page + 1 }),\r\n      this.fetchArticles,\r\n      window.scrollTo(0, 0)\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { articles, loading, page, pageSize, totalResults } = this.state;\r\n    const totalPages = Math.ceil(totalResults / pageSize); // Calculate total pages using pageSize\r\n\r\n    // Show loading indicator or message while fetching data\r\n    if (loading) {\r\n      return (\r\n        <div className=\"container my-3\">\r\n          <h2>Newsify - Top headlines</h2>\r\n          <Spinner />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    // Once data is fetched, render the articles\r\n    return (\r\n      <div className=\"container my-3\">\r\n        <h1 className=\"text-center\">Newsify - Top headlines</h1>\r\n        <div className=\"row\">\r\n          {articles.map((elem, index) => (\r\n            <div className=\"col-md-4 my-3\" key={index}>\r\n              <NewsItem\r\n                title={\r\n                  elem.title ? elem.title.slice(0, 60) : \"No title available\"\r\n                }\r\n                publishedAt={\r\n                  elem.publishedAt.slice(0,10)\r\n                }\r\n                description={\r\n                  elem.description\r\n                    ? elem.description.slice(0, 80)\r\n                    : \"No description available\"\r\n                }\r\n                imageUrl={\r\n                  elem.urlToImage\r\n                    ? elem.urlToImage\r\n                    : \"\"\r\n                }\r\n                newsUrl={elem.url ? elem.url : \"\"}\r\n              />\r\n            </div>\r\n          ))}\r\n\r\n        </div>\r\n        <div className=\"container d-flex justify-content-between\">\r\n          <button\r\n            type=\"button\"\r\n            disabled={page <= 1}\r\n            className=\"btn btn-dark\"\r\n            onClick={this.handlePrev}\r\n          >\r\n            &laquo; Previous\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            disabled={page >= totalPages}\r\n            className=\"btn btn-dark\"\r\n            onClick={this.handleNext}\r\n          >\r\n            Next &raquo;\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}